name: CI/CD Pipeline

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      -main

env:
  RESOURCE_GROUP: "projektNepremicnineResourceGroup"
  CLUSTER_NAME: "projektNepremicnineCluster"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [properties-service, image-service]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 22

    - name: Install dependencies
      working-directory: ./services/${{ matrix.service }}
      run: npm install

  docker-build-and-push:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [properties-service, image-service] 

    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image and push
        uses: docker/build-push-action@v6
        with:
          context: ./services/${{ matrix.service }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/projekt-nepremicnine-${{ matrix.service }}:latest
          build-args: |
            MONGO_URI: ${{ secrets.MONGO_URI }}

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Azure login
        run: az login
  #      uses: azure/login@v1.4.6
  #      with:
  #        client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  #    # Step 3: Configure kubelogin for Azure auth
      - name: Set up kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Step 4: Get AKS context
      - name: Get Kubernetes context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Create MongoDB URI Secret
        run: |
          kubectl create secret generic mongo-uri-secret \
            --from-literal=MONGO_URI=${{ secrets.MONGO_URI }} --dry-run=client -o yaml | kubectl apply -f -


      # Step 5: Deploy application to AKS
      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: |
            k8s/properties-service/deployment-properties.yaml
            k8s/image-service/deployment-image.yaml
            k8s/ingress.yaml 
          images: |
            ${{ secrets.DOCKER_USERNAME }}/projekt-nepremicnine-properties-service:latest
            ${{ secrets.DOCKER_USERNAME }}/projekt-nepremicnine-image-service:latest
      #    env:
      #      - name: MONGO_URI
      #        vlaue: ${{ secrets.MONGO_URI }}

      - name: Get Kubernetes Pods
        run: kubectl get pods

      - name: Restart Rollout
        run: |
          kubectl rollout restart deployment/properties-service
          kubectl rollout restart deployment/image-service